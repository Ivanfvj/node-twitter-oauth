import { Schema, Document, Model, model, SchemaOptions } from "mongoose";

// Collection to store user profile data from OAuth provider - Twitter profile
export interface UserModel {
  // Local MongoDB autogenerated id
  id?: string;

  // Unique identifier from twitter profile
  providerAccountId: string | number;
  name?: string;
  username?: string;
  email?: string;
  image?: string;
  emailVerified?: boolean;

  createdAt: Date;
  updatedAt: Date;
}

interface User extends Omit<UserModel, "id" | "createdAt" | "updatedAt"> {}

export interface IUser extends User {
  readonly _id?: any;
}

export interface UserDocument extends User, Document {}
export interface MongoUserModel extends Model<UserDocument> {}

const opts: SchemaOptions = { toJSON: { virtuals: true }, timestamps: true };
export const userSchema = new Schema<UserDocument, MongoUserModel, User>(
  {
    providerAccountId: {
      type: String,
      required: [true, "providerAccountId is required"],
    },
    name: { type: String },
    username: { type: String },
    email: { type: String },
    image: { type: String },
    emailVerified: { type: String },
  },
  opts
);

export default model<UserDocument, MongoUserModel>("User", userSchema);
